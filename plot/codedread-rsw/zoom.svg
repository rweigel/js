<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg width="100%" height="100%" version="1.1" viewBox="0 0 6000 3000"
    xmlns="http://www.w3.org/2000/svg" 
    xmlns:xlink="http://www.w3.org/1999/xlink"
    id="svgsvg"
    onload="init()"
>

<!--
    Testing Dragging of SVG Entities
    Copyright(c) 2005, Jeff Schiller
    
    - works in IE+ASV
    - works in Firefox 1.5
    - does NOT work in Opera 9 TP1
    
-->

<title>SVG Zooming</title>
<script><![CDATA[

    var draggingElement = null;
    var nMouseOffsetX = 0;
    var nMouseOffsetY = 0;
    var xo;
    var yo;
    
    function init() {

        var zoomrect = document.getElementById("zoomrect");
        var axesbox = document.getElementById("plotbox");

        if (zoomrect) {
            zoomrect.addEventListener("mousedown", mouseDown, false);
            axesbox.addEventListener("mousedown", mouseDown, false);
            zoomrect.addEventListener("mousemove", mouseMove, false);
            axesbox.addEventListener("mousemove", mouseMove, false);
            zoomrect.addEventListener("mouseup", mouseUp, false);
            axesbox.addEventListener("mouseup", mouseUp, false);
        }

    }

    function mouseDown(evt) { 

        var target = evt.currentTarget;
        var zoomrect = document.getElementById("zoomrect");

        draggingElement = zoomrect;
        var circle1 = document.getElementById("path1");
        circle1.setAttribute("opacity","0.5")

        if (target) {
            var po = document.documentElement.createSVGPoint();
            var m = getScreenCTM(document.documentElement);

	    po.x = evt.clientX;
	    po.y = evt.clientY;
            po = po.matrixTransform(m.inverse());

            nMouseOffsetX = po.x - parseInt(target.getAttribute("dragx"));
            nMouseOffsetY = po.y - parseInt(target.getAttribute("dragy"));

	    xo = po.x;
	    yo = po.y;

	    displayCoords2(xo, yo, "");

            draggingElement.setAttribute("x", po.x);
            draggingElement.setAttribute("y", po.y);
        }

    }

    function mouseUp(evt) { 

        draggingElement.setAttribute("width", 0);
        draggingElement.setAttribute("height", 0);
        draggingElement = null;

        var circle1 = document.getElementById("path1");
        var p = document.documentElement.createSVGPoint();
        var m = getScreenCTM(document.documentElement);

        p.x = evt.clientX;
        p.y = evt.clientY;
        p = p.matrixTransform(m.inverse());
        p.x -= nMouseOffsetX;
        p.y -= nMouseOffsetY;


//	cx = circle1.getAttribute("cx");
//	cy = circle1.getAttribute("cy");
//	    displayCoords2(p.x, p.y, "");

       circle1.setAttribute("transform","translate("+(900-xo+500)+","+(900-yo+500)+")")
//        circle1.setAttribute("cx", cx-p.x);
//        circle1.setAttribute("cy", cy-p.y);

       circle1.setAttribute("opacity","1.0")


        nMouseOffsetX = 0;
        nMouseOffsetY = 0;

    }

    function mouseMove(evt) { 

        var p = document.documentElement.createSVGPoint();
        var m = getScreenCTM(document.documentElement);

        p.x = evt.clientX;
        p.y = evt.clientY;

        p = p.matrixTransform(m.inverse());
        p.x -= nMouseOffsetX;
        p.y -= nMouseOffsetY;

        displayCoords(p.x, p.y,"");

        if (draggingElement) {
//	    displayCoords(p.x, p.y,"");
            draggingElement.setAttribute("width", p.x);
            draggingElement.setAttribute("height", p.y);
//	    draggingElement.setAttribute("transform", 
//					 "matrix(1,0,0,1,0,0)" );
        }

    }

function make( name, attr, text, url )
{
    var node = document.createElementNS( ns.svg, name );
    var name = '', atns;
    if(attr) {
        attr = forceStyles( attr );
        for( var i in attr )
        {
            atns = (/^(.*):/.exec( i )||[,null])[1];
            node.setAttributeNS( atns && ns[atns], i, attr[i] );
        }
    }
    if( text )
    {
        text = document.createTextNode( text );
        node.appendChild( text );
        if( url )
        {
            var a = make( 'a', { 'xlink:href':url } );
            a.appendChild( node );
            return a;
        }
    }
    return node;
}


    // Following is from Holger Will since ASV3 and O9 do not support getScreenTCM()
    // See http://groups.yahoo.com/group/svg-developers/message/50789
    function getScreenCTM(doc){
        if(doc.getScreenCTM) { return doc.getScreenCTM(); }
        
        var root=doc
        var sCTM= root.createSVGMatrix()

        var tr= root.createSVGMatrix()
        var par=root.getAttribute("preserveAspectRatio")
        if (par==null || par=="") par="xMidYMid meet"//setting to default value
        parX=par.substring(0,4) //xMin;xMid;xMax
        parY=par.substring(4,8)//YMin;YMid;YMax;
        ma=par.split(" ")
        mos=ma[1] //meet;slice

        //get dimensions of the viewport
        sCTM.a= 1
        sCTM.d=1
        sCTM.e= 0
        sCTM.f=0


        w=root.getAttribute("width")
        if (w==null || w=="") w=innerWidth

        h=root.getAttribute("height")
        if (h==null || h=="") h=innerHeight

        // Jeff Schiller:  Modified to account for percentages - I'm not 
        // absolutely certain this is correct but it works for 100%/100%
        if(w.substr(w.length-1, 1) == "%") {
            w = (parseFloat(w.substr(0,w.length-1)) / 100.0) * innerWidth;
        }
        if(h.substr(h.length-1, 1) == "%") {
            h = (parseFloat(h.substr(0,h.length-1)) / 100.0) * innerHeight;
        }

        // get the ViewBox
        vba=root.getAttribute("viewBox")
        if(vba==null) vba="0 0 "+w+" "+h
        var vb=vba.split(" ")//get the viewBox into an array

        //--------------------------------------------------------------------------
        //create a matrix with current user transformation
        tr.a= root.currentScale
        tr.d=root.currentScale
        tr.e= root.currentTranslate.x
        tr.f=root.currentTranslate.y


        //scale factors
        sx=w/vb[2]
        sy=h/vb[3]


        //meetOrSlice
        if(mos=="slice"){
        s=(sx>sy ? sx:sy)
        }else{
        s=(sx<sy ? sx:sy)
        }

        //preserveAspectRatio="none"
        if (par=="none"){
            sCTM.a=sx//scaleX
            sCTM.d=sy//scaleY
            sCTM.e=- vb[0]*sx //translateX
            sCTM.f=- vb[0]*sy //translateY
            sCTM=tr.multiply(sCTM)//taking user transformations into acount

            return sCTM
        }


        sCTM.a=s //scaleX
        sCTM.d=s//scaleY
        //-------------------------------------------------------
        switch(parX){
        case "xMid":
        sCTM.e=((w-vb[2]*s)/2) - vb[0]*s //translateX

        break;
        case "xMin":
        sCTM.e=- vb[0]*s//translateX
        break;
        case "xMax":
        sCTM.e=(w-vb[2]*s)- vb[0]*s //translateX
        break;
        }
        //------------------------------------------------------------
        switch(parY){
        case "YMid":
        sCTM.f=(h-vb[3]*s)/2 - vb[1]*s //translateY
        break;
        case "YMin":
        sCTM.f=- vb[1]*s//translateY
        break;
        case "YMax":
        sCTM.f=(h-vb[3]*s) - vb[1]*s //translateY
        break;
        }
        sCTM=tr.multiply(sCTM)//taking user transformations into acount

        return sCTM
    }

    
    function displayCoords(x,y,extra) {
        var xNode = document.getElementById("xpos");
        var yNode = document.getElementById("ypos");
        if(xNode && yNode) {
            xNode.firstChild.nodeValue = parseInt(x) + extra;
            yNode.firstChild.nodeValue = parseInt(y) + extra;
        }
    }

    function displayCoords2(x,y,extra) {
        var xNode = document.getElementById("xpos2");
        var yNode = document.getElementById("ypos2");
        if(xNode && yNode) {
            xNode.firstChild.nodeValue = parseInt(x) + extra;
            yNode.firstChild.nodeValue = parseInt(y) + extra;
        }
    }

]]></script>

<rect id="background" 
	x="0" y="0" width="4000" height="4000" 
	fill="blue" stroke="black" stroke-width="10" dragx="0" dragy="0" 
/>

<rect id="plotbox" 
	x="500" y="500" width="2000" height="2000" 
	fill="white" stroke="black" stroke-width="10" dragx="0" dragy="0" 
/>

<circle	id="circle1" cx="1500" cy="1500" r="50" 
	fill="blue" 
	stroke-width="10"
	stroke="black" />

<circle	cx="1700" cy="1700" r="50" 
	fill="blue" 
	stroke-width="10"
	stroke="black" />

<rect id="zoomrect"
	dragx="0" dragy="0" x="0" y="0" 
	width="1" height="1"
	opacity="1.0" fill-opacity="0.5"
	fill="gray" stroke="black" stroke-width="10" 
/>

<path id="path1" transform="translate(900,900)" d="
M1,100 
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
M1,10 
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
m10,0
a10,10 0 1,0 0 0 
" />



<text           x="2900" y="100" font-size="100" fill="white">Mouse down system</text>
<text           x="2900" y="200" font-size="100" fill="white">X:</text>
<text id="xpos" x="3000" y="200" font-size="100" fill="white"> </text>
<text           x="2900" y="320" font-size="100" fill="white">Y:</text>
<text id="ypos" x="3000" y="320" font-size="100" fill="white"> </text>


<text            x="2900" y="500" font-size="100" fill="Yellow">Blue box system</text>
<text            x="2900" y="600" font-size="100" fill="yellow">X:</text>
<text id="xpos2" x="3000" y="600" font-size="100" fill="yellow"> </text>
<text            x="2900" y="720" font-size="100" fill="yellow">Y:</text>
<text id="ypos2" x="3000" y="720" font-size="100" fill="yellow"> </text>

</svg>
