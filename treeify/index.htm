<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
  <head>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8">
    <title>Treeify Demo</title>

    <script type="text/javascript" src="js/jquery-1.8.3.min.js"></script>
    <script type="text/javascript" src="js/jstree_pre1.0_stable/jquery.jstree.js"></script>
    <script type="text/javascript" src="js/treeify.js"></script>
    <script type="text/javascript" src="treeify.json"></script>

    <script>

		function isarray(a) {
			if( Object.prototype.toString.call( a ) === '[object Array]' ) {
			    return true;
			}
			return false;
		}
		function isobject(a) {
			if( Object.prototype.toString.call( a ) === '[object Object]' ) {
			    return true;
			}
			return false;
		}

		function createlevel(D) {
			var k = 0;
			if (debug) {
				console.log("creating level for")
				console.log(D);
			}
			var template = new Array();

			if (isarray(D)) {
				for (i = 0; i < D.length; i++) {
					template[i] = new Object();
					template[i].metadata = new Object();
					if (D[i] == "") {
						template[i].metadata = {id: "."};
						template[i].data = ".";
					} else {
						template[i].metadata = {id: D[i]};
						template[i].data =  D[i];
					}
				}
				return template;	
			}
			
			for (key in D) {
				template[k] = new Object();
				template[k].metadata = new Object();

				if (isobject(D[key]) || isarray(D[key])) {
					if (D[key] != "") {
						template[k].metadata = {id: key};
						template[k].data = key;
						template[k].children = createlevel(D[key]);
					} else {
						template[k].metadata = {id: "."};
						template[k].data = key;//".";
						//template[k].children = createlevel(D[key]);
					}
				} else {
					template[k].metadata = {id: D[key]};
					template[k].data = D[key];
					template[k].children = D[key];
				}
				k = k+1;
			}
			if (debug)
				console.log(template);

			return template;
		}

		if (0) {
		var T = new Array();
		var start = new Date().getTime();
		console.log("Start placing in array");
		for (var i = 0;i < data.length;i++) {
			T[i] = data[i].value.replace("_",".");
		}		
		var stop = new Date().getTime();
		console.log("Finished placing in array "+(stop-start)+" ms");
                }

	        //
		var start = new Date().getTime();
		console.log("Call treeify");
                d1 = ["cri.AAT3","cri.AATB","cri_c.AAT3","cri_c.AAT3.minute","cri_c.AATB.minute"];
		D1 = treeify(d1,0);
		var stop = new Date().getTime();
		console.log("Finished treeify in "+(stop-start)+" ms");
		console.log("Treeify result for : "+d1);
		console.log(D1)

		var start = new Date().getTime();
		console.log("Call createlevel()");
		var data1 = createlevel(D1);
		console.log("createlevel() result:");
		console.log(data1);
		var stop = new Date().getTime();
		console.log("Finished createlevel() in "+(stop-start)+" ms");

		var start = new Date().getTime();
		console.log("Call treeify");
                d2 = ["A.B.C","A.B.D","A.Z.Z","D.Z.Z"];
		D2 = treeify(d2,0);
		var stop = new Date().getTime();
		console.log("Finished treeify in "+(stop-start)+" ms");
		console.log("Treeify result for : "+d2);
		console.log(D2)

		var start = new Date().getTime();
		console.log("Call createlevel()");
		var data2 = createlevel(D2);
		console.log("createlevel() result:");
		console.log(data2);
		var stop = new Date().getTime();
		console.log("Finished createlevel() in "+(stop-start)+" ms");
		
		$(function () {
			$("#demo1").jstree({ 
					"json_data": {"data" : data1, "progressive_render": true},
					"themes": {"theme":"default","dots":true,"icons":false},
					"plugins": [ "themes", "json_data", "ui" ],
				})
			$("#demo1").bind("select_node.jstree", function (e, data) {  data.inst.open_node();console.log(data.inst.get_path());console.log(data.rslt.obj.data("id"))});

			$("#demo2").jstree({ 
					"json_data": {"data" : data2, "progressive_render": true},
					"themes": {"theme":"default","dots":true,"icons":false},
					"plugins": [ "themes", "json_data", "ui" ],
				})
			$("#demo2").bind("select_node.jstree", function (e, data) {  data.inst.open_node();console.log(data.inst.get_path());console.log(data.rslt.obj.data("id"))});
			});		
	</script>
  </head>
  <body>
    <div id="demo1"></div>
    <hr/>
    <div id="demo2"></div>
  </body>
</html>
